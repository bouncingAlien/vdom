{"version":3,"sources":["vdom/createElement.js","vdom/render.js","vdom/mount.js","vdom/diff.js","main.js"],"names":["tagName","attr","children","renderElement","$el","document","createElement","Object","entries","key","value","setAttribute","child","$child","render","appendChild","vNode","createTextNode","$node","$target","replaceWith","diff","createVApp","count","id","dataCount","String","src","vApp","$app","$rootElement","getElementById","setInterval","vNewApp","patch","vapp","console","log"],"mappings":"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","file":"main.1f19ae8e.map","sourceRoot":"../src","sourcesContent":["export default (tagName, { attr = {}, children = [] } = {} ) => {\n    return {\n        tagName,\n        attr,\n        children,\n    };\n};","const renderElement = ({ tagName, attr, children }) => {\n    const $el = document.createElement(tagName);\n\n    // set attributes\n    for(const [key, value] of Object.entries(attr)){\n        $el.setAttribute(key, value);\n    }\n\n    // set children\n    for( const child of children){\n        const $child = render(child);\n        $el.appendChild($child);\n    }\n\n    return $el;\n};\n\nconst render = (vNode) => {\n    if (typeof vNode === 'string') return document.createTextNode(vNode);\n    return renderElement(vNode);\n}\n\nexport default render;","export default ($node, $target) => {\n    $target.replaceWith($node);\n    return $node;\n}","const diff = () => {\n    \n}\n\nexport default diff;","import createElement from './vdom/createElement';\nimport render from './vdom/render';\nimport mount from './vdom/mount';\nimport diff from './vdom/diff';\n\nconst createVApp = (count) => createElement('div', {\n    attr: {\n        id: 'app',\n        dataCount: count\n    },\n    children: [\n        String(count),\n        createElement('img', {\n            attr: {\n                src: 'https://media.giphy.com/media/3NtY188QaxDdC/giphy.gif'\n            }\n        }),\n        createElement('input')\n    ]\n});\n\nlet count = 0;\nlet vApp = createVApp(count);\n\nconst $app = render(vApp);\nlet $rootElement = mount($app, document.getElementById('root'));\n\nsetInterval(() => {\n    count++;\n    const vNewApp = createVApp(count);\n    const patch = diff(vapp, vNewApp);\n    patch($rootElement);\n    vApp = vNewApp;\n}, 1000);\n\nconsole.log($app);"]}